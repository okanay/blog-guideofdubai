/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as BlogRouteImport } from './routes/blog/route'
import { Route as BlogNotFoundImport } from './routes/blog/not-found'
import { Route as BlogMainRouteImport } from './routes/blog/_main/route'
import { Route as BlogAuthRouteImport } from './routes/blog/_auth/route'
import { Route as BlogMainIndexImport } from './routes/blog/_main/index'
import { Route as BlogMainSlugImport } from './routes/blog/_main/$slug'
import { Route as BlogAuthLoginImport } from './routes/blog/_auth/login'
import { Route as BlogAuthEditorRouteImport } from './routes/blog/_auth/_editor/route'
import { Route as BlogAuthEditorEditorIndexImport } from './routes/blog/_auth/_editor/editor.index'
import { Route as BlogAuthEditorEditorListImport } from './routes/blog/_auth/_editor/editor.list'
import { Route as BlogAuthEditorEditorFeaturedImport } from './routes/blog/_auth/_editor/editor.featured'
import { Route as BlogAuthEditorEditorCreateImport } from './routes/blog/_auth/_editor/editor.create'
import { Route as BlogAuthEditorEditorEditIdImport } from './routes/blog/_auth/_editor/editor.edit.$id'

// Create/Update Routes

const BlogRouteRoute = BlogRouteImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => rootRoute,
} as any)

const BlogNotFoundRoute = BlogNotFoundImport.update({
  id: '/not-found',
  path: '/not-found',
  getParentRoute: () => BlogRouteRoute,
} as any)

const BlogMainRouteRoute = BlogMainRouteImport.update({
  id: '/_main',
  getParentRoute: () => BlogRouteRoute,
} as any)

const BlogAuthRouteRoute = BlogAuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => BlogRouteRoute,
} as any)

const BlogMainIndexRoute = BlogMainIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => BlogMainRouteRoute,
} as any)

const BlogMainSlugRoute = BlogMainSlugImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => BlogMainRouteRoute,
} as any)

const BlogAuthLoginRoute = BlogAuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => BlogAuthRouteRoute,
} as any)

const BlogAuthEditorRouteRoute = BlogAuthEditorRouteImport.update({
  id: '/_editor',
  getParentRoute: () => BlogAuthRouteRoute,
} as any)

const BlogAuthEditorEditorIndexRoute = BlogAuthEditorEditorIndexImport.update({
  id: '/editor/',
  path: '/editor/',
  getParentRoute: () => BlogAuthEditorRouteRoute,
} as any)

const BlogAuthEditorEditorListRoute = BlogAuthEditorEditorListImport.update({
  id: '/editor/list',
  path: '/editor/list',
  getParentRoute: () => BlogAuthEditorRouteRoute,
} as any)

const BlogAuthEditorEditorFeaturedRoute =
  BlogAuthEditorEditorFeaturedImport.update({
    id: '/editor/featured',
    path: '/editor/featured',
    getParentRoute: () => BlogAuthEditorRouteRoute,
  } as any)

const BlogAuthEditorEditorCreateRoute = BlogAuthEditorEditorCreateImport.update(
  {
    id: '/editor/create',
    path: '/editor/create',
    getParentRoute: () => BlogAuthEditorRouteRoute,
  } as any,
)

const BlogAuthEditorEditorEditIdRoute = BlogAuthEditorEditorEditIdImport.update(
  {
    id: '/editor/edit/$id',
    path: '/editor/edit/$id',
    getParentRoute: () => BlogAuthEditorRouteRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogRouteImport
      parentRoute: typeof rootRoute
    }
    '/blog/_auth': {
      id: '/blog/_auth'
      path: ''
      fullPath: '/blog'
      preLoaderRoute: typeof BlogAuthRouteImport
      parentRoute: typeof BlogRouteImport
    }
    '/blog/_main': {
      id: '/blog/_main'
      path: ''
      fullPath: '/blog'
      preLoaderRoute: typeof BlogMainRouteImport
      parentRoute: typeof BlogRouteImport
    }
    '/blog/not-found': {
      id: '/blog/not-found'
      path: '/not-found'
      fullPath: '/blog/not-found'
      preLoaderRoute: typeof BlogNotFoundImport
      parentRoute: typeof BlogRouteImport
    }
    '/blog/_auth/_editor': {
      id: '/blog/_auth/_editor'
      path: ''
      fullPath: '/blog'
      preLoaderRoute: typeof BlogAuthEditorRouteImport
      parentRoute: typeof BlogAuthRouteImport
    }
    '/blog/_auth/login': {
      id: '/blog/_auth/login'
      path: '/login'
      fullPath: '/blog/login'
      preLoaderRoute: typeof BlogAuthLoginImport
      parentRoute: typeof BlogAuthRouteImport
    }
    '/blog/_main/$slug': {
      id: '/blog/_main/$slug'
      path: '/$slug'
      fullPath: '/blog/$slug'
      preLoaderRoute: typeof BlogMainSlugImport
      parentRoute: typeof BlogMainRouteImport
    }
    '/blog/_main/': {
      id: '/blog/_main/'
      path: '/'
      fullPath: '/blog/'
      preLoaderRoute: typeof BlogMainIndexImport
      parentRoute: typeof BlogMainRouteImport
    }
    '/blog/_auth/_editor/editor/create': {
      id: '/blog/_auth/_editor/editor/create'
      path: '/editor/create'
      fullPath: '/blog/editor/create'
      preLoaderRoute: typeof BlogAuthEditorEditorCreateImport
      parentRoute: typeof BlogAuthEditorRouteImport
    }
    '/blog/_auth/_editor/editor/featured': {
      id: '/blog/_auth/_editor/editor/featured'
      path: '/editor/featured'
      fullPath: '/blog/editor/featured'
      preLoaderRoute: typeof BlogAuthEditorEditorFeaturedImport
      parentRoute: typeof BlogAuthEditorRouteImport
    }
    '/blog/_auth/_editor/editor/list': {
      id: '/blog/_auth/_editor/editor/list'
      path: '/editor/list'
      fullPath: '/blog/editor/list'
      preLoaderRoute: typeof BlogAuthEditorEditorListImport
      parentRoute: typeof BlogAuthEditorRouteImport
    }
    '/blog/_auth/_editor/editor/': {
      id: '/blog/_auth/_editor/editor/'
      path: '/editor'
      fullPath: '/blog/editor'
      preLoaderRoute: typeof BlogAuthEditorEditorIndexImport
      parentRoute: typeof BlogAuthEditorRouteImport
    }
    '/blog/_auth/_editor/editor/edit/$id': {
      id: '/blog/_auth/_editor/editor/edit/$id'
      path: '/editor/edit/$id'
      fullPath: '/blog/editor/edit/$id'
      preLoaderRoute: typeof BlogAuthEditorEditorEditIdImport
      parentRoute: typeof BlogAuthEditorRouteImport
    }
  }
}

// Create and export the route tree

interface BlogAuthEditorRouteRouteChildren {
  BlogAuthEditorEditorCreateRoute: typeof BlogAuthEditorEditorCreateRoute
  BlogAuthEditorEditorFeaturedRoute: typeof BlogAuthEditorEditorFeaturedRoute
  BlogAuthEditorEditorListRoute: typeof BlogAuthEditorEditorListRoute
  BlogAuthEditorEditorIndexRoute: typeof BlogAuthEditorEditorIndexRoute
  BlogAuthEditorEditorEditIdRoute: typeof BlogAuthEditorEditorEditIdRoute
}

const BlogAuthEditorRouteRouteChildren: BlogAuthEditorRouteRouteChildren = {
  BlogAuthEditorEditorCreateRoute: BlogAuthEditorEditorCreateRoute,
  BlogAuthEditorEditorFeaturedRoute: BlogAuthEditorEditorFeaturedRoute,
  BlogAuthEditorEditorListRoute: BlogAuthEditorEditorListRoute,
  BlogAuthEditorEditorIndexRoute: BlogAuthEditorEditorIndexRoute,
  BlogAuthEditorEditorEditIdRoute: BlogAuthEditorEditorEditIdRoute,
}

const BlogAuthEditorRouteRouteWithChildren =
  BlogAuthEditorRouteRoute._addFileChildren(BlogAuthEditorRouteRouteChildren)

interface BlogAuthRouteRouteChildren {
  BlogAuthEditorRouteRoute: typeof BlogAuthEditorRouteRouteWithChildren
  BlogAuthLoginRoute: typeof BlogAuthLoginRoute
}

const BlogAuthRouteRouteChildren: BlogAuthRouteRouteChildren = {
  BlogAuthEditorRouteRoute: BlogAuthEditorRouteRouteWithChildren,
  BlogAuthLoginRoute: BlogAuthLoginRoute,
}

const BlogAuthRouteRouteWithChildren = BlogAuthRouteRoute._addFileChildren(
  BlogAuthRouteRouteChildren,
)

interface BlogMainRouteRouteChildren {
  BlogMainSlugRoute: typeof BlogMainSlugRoute
  BlogMainIndexRoute: typeof BlogMainIndexRoute
}

const BlogMainRouteRouteChildren: BlogMainRouteRouteChildren = {
  BlogMainSlugRoute: BlogMainSlugRoute,
  BlogMainIndexRoute: BlogMainIndexRoute,
}

const BlogMainRouteRouteWithChildren = BlogMainRouteRoute._addFileChildren(
  BlogMainRouteRouteChildren,
)

interface BlogRouteRouteChildren {
  BlogAuthRouteRoute: typeof BlogAuthRouteRouteWithChildren
  BlogMainRouteRoute: typeof BlogMainRouteRouteWithChildren
  BlogNotFoundRoute: typeof BlogNotFoundRoute
}

const BlogRouteRouteChildren: BlogRouteRouteChildren = {
  BlogAuthRouteRoute: BlogAuthRouteRouteWithChildren,
  BlogMainRouteRoute: BlogMainRouteRouteWithChildren,
  BlogNotFoundRoute: BlogNotFoundRoute,
}

const BlogRouteRouteWithChildren = BlogRouteRoute._addFileChildren(
  BlogRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/blog': typeof BlogAuthEditorRouteRouteWithChildren
  '/blog/not-found': typeof BlogNotFoundRoute
  '/blog/login': typeof BlogAuthLoginRoute
  '/blog/$slug': typeof BlogMainSlugRoute
  '/blog/': typeof BlogMainIndexRoute
  '/blog/editor/create': typeof BlogAuthEditorEditorCreateRoute
  '/blog/editor/featured': typeof BlogAuthEditorEditorFeaturedRoute
  '/blog/editor/list': typeof BlogAuthEditorEditorListRoute
  '/blog/editor': typeof BlogAuthEditorEditorIndexRoute
  '/blog/editor/edit/$id': typeof BlogAuthEditorEditorEditIdRoute
}

export interface FileRoutesByTo {
  '/blog': typeof BlogMainIndexRoute
  '/blog/not-found': typeof BlogNotFoundRoute
  '/blog/login': typeof BlogAuthLoginRoute
  '/blog/$slug': typeof BlogMainSlugRoute
  '/blog/editor/create': typeof BlogAuthEditorEditorCreateRoute
  '/blog/editor/featured': typeof BlogAuthEditorEditorFeaturedRoute
  '/blog/editor/list': typeof BlogAuthEditorEditorListRoute
  '/blog/editor': typeof BlogAuthEditorEditorIndexRoute
  '/blog/editor/edit/$id': typeof BlogAuthEditorEditorEditIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/blog': typeof BlogRouteRouteWithChildren
  '/blog/_auth': typeof BlogAuthRouteRouteWithChildren
  '/blog/_main': typeof BlogMainRouteRouteWithChildren
  '/blog/not-found': typeof BlogNotFoundRoute
  '/blog/_auth/_editor': typeof BlogAuthEditorRouteRouteWithChildren
  '/blog/_auth/login': typeof BlogAuthLoginRoute
  '/blog/_main/$slug': typeof BlogMainSlugRoute
  '/blog/_main/': typeof BlogMainIndexRoute
  '/blog/_auth/_editor/editor/create': typeof BlogAuthEditorEditorCreateRoute
  '/blog/_auth/_editor/editor/featured': typeof BlogAuthEditorEditorFeaturedRoute
  '/blog/_auth/_editor/editor/list': typeof BlogAuthEditorEditorListRoute
  '/blog/_auth/_editor/editor/': typeof BlogAuthEditorEditorIndexRoute
  '/blog/_auth/_editor/editor/edit/$id': typeof BlogAuthEditorEditorEditIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/blog'
    | '/blog/not-found'
    | '/blog/login'
    | '/blog/$slug'
    | '/blog/'
    | '/blog/editor/create'
    | '/blog/editor/featured'
    | '/blog/editor/list'
    | '/blog/editor'
    | '/blog/editor/edit/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/blog'
    | '/blog/not-found'
    | '/blog/login'
    | '/blog/$slug'
    | '/blog/editor/create'
    | '/blog/editor/featured'
    | '/blog/editor/list'
    | '/blog/editor'
    | '/blog/editor/edit/$id'
  id:
    | '__root__'
    | '/blog'
    | '/blog/_auth'
    | '/blog/_main'
    | '/blog/not-found'
    | '/blog/_auth/_editor'
    | '/blog/_auth/login'
    | '/blog/_main/$slug'
    | '/blog/_main/'
    | '/blog/_auth/_editor/editor/create'
    | '/blog/_auth/_editor/editor/featured'
    | '/blog/_auth/_editor/editor/list'
    | '/blog/_auth/_editor/editor/'
    | '/blog/_auth/_editor/editor/edit/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  BlogRouteRoute: typeof BlogRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  BlogRouteRoute: BlogRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/blog"
      ]
    },
    "/blog": {
      "filePath": "blog/route.tsx",
      "children": [
        "/blog/_auth",
        "/blog/_main",
        "/blog/not-found"
      ]
    },
    "/blog/_auth": {
      "filePath": "blog/_auth/route.tsx",
      "parent": "/blog",
      "children": [
        "/blog/_auth/_editor",
        "/blog/_auth/login"
      ]
    },
    "/blog/_main": {
      "filePath": "blog/_main/route.tsx",
      "parent": "/blog",
      "children": [
        "/blog/_main/$slug",
        "/blog/_main/"
      ]
    },
    "/blog/not-found": {
      "filePath": "blog/not-found.tsx",
      "parent": "/blog"
    },
    "/blog/_auth/_editor": {
      "filePath": "blog/_auth/_editor/route.tsx",
      "parent": "/blog/_auth",
      "children": [
        "/blog/_auth/_editor/editor/create",
        "/blog/_auth/_editor/editor/featured",
        "/blog/_auth/_editor/editor/list",
        "/blog/_auth/_editor/editor/",
        "/blog/_auth/_editor/editor/edit/$id"
      ]
    },
    "/blog/_auth/login": {
      "filePath": "blog/_auth/login.tsx",
      "parent": "/blog/_auth"
    },
    "/blog/_main/$slug": {
      "filePath": "blog/_main/$slug.tsx",
      "parent": "/blog/_main"
    },
    "/blog/_main/": {
      "filePath": "blog/_main/index.tsx",
      "parent": "/blog/_main"
    },
    "/blog/_auth/_editor/editor/create": {
      "filePath": "blog/_auth/_editor/editor.create.tsx",
      "parent": "/blog/_auth/_editor"
    },
    "/blog/_auth/_editor/editor/featured": {
      "filePath": "blog/_auth/_editor/editor.featured.tsx",
      "parent": "/blog/_auth/_editor"
    },
    "/blog/_auth/_editor/editor/list": {
      "filePath": "blog/_auth/_editor/editor.list.tsx",
      "parent": "/blog/_auth/_editor"
    },
    "/blog/_auth/_editor/editor/": {
      "filePath": "blog/_auth/_editor/editor.index.tsx",
      "parent": "/blog/_auth/_editor"
    },
    "/blog/_auth/_editor/editor/edit/$id": {
      "filePath": "blog/_auth/_editor/editor.edit.$id.tsx",
      "parent": "/blog/_auth/_editor"
    }
  }
}
ROUTE_MANIFEST_END */
