/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LangNotFoundImport } from './routes/$lang/not-found'
import { Route as LangMainRouteImport } from './routes/$lang/_main/route'
import { Route as LangMainIndexImport } from './routes/$lang/_main/index'
import { Route as LangMainBlogRouteImport } from './routes/$lang/_main/blog.route'
import { Route as LangMainBlogIndexImport } from './routes/$lang/_main/blog.index'
import { Route as LangMainBlogSlugImport } from './routes/$lang/_main/blog.$slug'

// Create Virtual Routes

const LangImport = createFileRoute('/$lang')()

// Create/Update Routes

const LangRoute = LangImport.update({
  id: '/$lang',
  path: '/$lang',
  getParentRoute: () => rootRoute,
} as any)

const LangNotFoundRoute = LangNotFoundImport.update({
  id: '/not-found',
  path: '/not-found',
  getParentRoute: () => LangRoute,
} as any)

const LangMainRouteRoute = LangMainRouteImport.update({
  id: '/_main',
  getParentRoute: () => LangRoute,
} as any)

const LangMainIndexRoute = LangMainIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LangMainRouteRoute,
} as any)

const LangMainBlogRouteRoute = LangMainBlogRouteImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => LangMainRouteRoute,
} as any)

const LangMainBlogIndexRoute = LangMainBlogIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LangMainBlogRouteRoute,
} as any)

const LangMainBlogSlugRoute = LangMainBlogSlugImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => LangMainBlogRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$lang': {
      id: '/$lang'
      path: '/$lang'
      fullPath: '/$lang'
      preLoaderRoute: typeof LangImport
      parentRoute: typeof rootRoute
    }
    '/$lang/_main': {
      id: '/$lang/_main'
      path: '/$lang'
      fullPath: '/$lang'
      preLoaderRoute: typeof LangMainRouteImport
      parentRoute: typeof LangRoute
    }
    '/$lang/not-found': {
      id: '/$lang/not-found'
      path: '/not-found'
      fullPath: '/$lang/not-found'
      preLoaderRoute: typeof LangNotFoundImport
      parentRoute: typeof LangImport
    }
    '/$lang/_main/blog': {
      id: '/$lang/_main/blog'
      path: '/blog'
      fullPath: '/$lang/blog'
      preLoaderRoute: typeof LangMainBlogRouteImport
      parentRoute: typeof LangMainRouteImport
    }
    '/$lang/_main/': {
      id: '/$lang/_main/'
      path: '/'
      fullPath: '/$lang/'
      preLoaderRoute: typeof LangMainIndexImport
      parentRoute: typeof LangMainRouteImport
    }
    '/$lang/_main/blog/$slug': {
      id: '/$lang/_main/blog/$slug'
      path: '/$slug'
      fullPath: '/$lang/blog/$slug'
      preLoaderRoute: typeof LangMainBlogSlugImport
      parentRoute: typeof LangMainBlogRouteImport
    }
    '/$lang/_main/blog/': {
      id: '/$lang/_main/blog/'
      path: '/'
      fullPath: '/$lang/blog/'
      preLoaderRoute: typeof LangMainBlogIndexImport
      parentRoute: typeof LangMainBlogRouteImport
    }
  }
}

// Create and export the route tree

interface LangMainBlogRouteRouteChildren {
  LangMainBlogSlugRoute: typeof LangMainBlogSlugRoute
  LangMainBlogIndexRoute: typeof LangMainBlogIndexRoute
}

const LangMainBlogRouteRouteChildren: LangMainBlogRouteRouteChildren = {
  LangMainBlogSlugRoute: LangMainBlogSlugRoute,
  LangMainBlogIndexRoute: LangMainBlogIndexRoute,
}

const LangMainBlogRouteRouteWithChildren =
  LangMainBlogRouteRoute._addFileChildren(LangMainBlogRouteRouteChildren)

interface LangMainRouteRouteChildren {
  LangMainBlogRouteRoute: typeof LangMainBlogRouteRouteWithChildren
  LangMainIndexRoute: typeof LangMainIndexRoute
}

const LangMainRouteRouteChildren: LangMainRouteRouteChildren = {
  LangMainBlogRouteRoute: LangMainBlogRouteRouteWithChildren,
  LangMainIndexRoute: LangMainIndexRoute,
}

const LangMainRouteRouteWithChildren = LangMainRouteRoute._addFileChildren(
  LangMainRouteRouteChildren,
)

interface LangRouteChildren {
  LangMainRouteRoute: typeof LangMainRouteRouteWithChildren
  LangNotFoundRoute: typeof LangNotFoundRoute
}

const LangRouteChildren: LangRouteChildren = {
  LangMainRouteRoute: LangMainRouteRouteWithChildren,
  LangNotFoundRoute: LangNotFoundRoute,
}

const LangRouteWithChildren = LangRoute._addFileChildren(LangRouteChildren)

export interface FileRoutesByFullPath {
  '/$lang': typeof LangMainRouteRouteWithChildren
  '/$lang/not-found': typeof LangNotFoundRoute
  '/$lang/blog': typeof LangMainBlogRouteRouteWithChildren
  '/$lang/': typeof LangMainIndexRoute
  '/$lang/blog/$slug': typeof LangMainBlogSlugRoute
  '/$lang/blog/': typeof LangMainBlogIndexRoute
}

export interface FileRoutesByTo {
  '/$lang': typeof LangMainIndexRoute
  '/$lang/not-found': typeof LangNotFoundRoute
  '/$lang/blog/$slug': typeof LangMainBlogSlugRoute
  '/$lang/blog': typeof LangMainBlogIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/$lang': typeof LangRouteWithChildren
  '/$lang/_main': typeof LangMainRouteRouteWithChildren
  '/$lang/not-found': typeof LangNotFoundRoute
  '/$lang/_main/blog': typeof LangMainBlogRouteRouteWithChildren
  '/$lang/_main/': typeof LangMainIndexRoute
  '/$lang/_main/blog/$slug': typeof LangMainBlogSlugRoute
  '/$lang/_main/blog/': typeof LangMainBlogIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$lang'
    | '/$lang/not-found'
    | '/$lang/blog'
    | '/$lang/'
    | '/$lang/blog/$slug'
    | '/$lang/blog/'
  fileRoutesByTo: FileRoutesByTo
  to: '/$lang' | '/$lang/not-found' | '/$lang/blog/$slug' | '/$lang/blog'
  id:
    | '__root__'
    | '/$lang'
    | '/$lang/_main'
    | '/$lang/not-found'
    | '/$lang/_main/blog'
    | '/$lang/_main/'
    | '/$lang/_main/blog/$slug'
    | '/$lang/_main/blog/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LangRoute: typeof LangRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LangRoute: LangRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$lang"
      ]
    },
    "/$lang": {
      "filePath": "$lang/_main",
      "children": [
        "/$lang/_main",
        "/$lang/not-found"
      ]
    },
    "/$lang/_main": {
      "filePath": "$lang/_main/route.tsx",
      "parent": "/$lang",
      "children": [
        "/$lang/_main/blog",
        "/$lang/_main/"
      ]
    },
    "/$lang/not-found": {
      "filePath": "$lang/not-found.tsx",
      "parent": "/$lang"
    },
    "/$lang/_main/blog": {
      "filePath": "$lang/_main/blog.route.tsx",
      "parent": "/$lang/_main",
      "children": [
        "/$lang/_main/blog/$slug",
        "/$lang/_main/blog/"
      ]
    },
    "/$lang/_main/": {
      "filePath": "$lang/_main/index.tsx",
      "parent": "/$lang/_main"
    },
    "/$lang/_main/blog/$slug": {
      "filePath": "$lang/_main/blog.$slug.tsx",
      "parent": "/$lang/_main/blog"
    },
    "/$lang/_main/blog/": {
      "filePath": "$lang/_main/blog.index.tsx",
      "parent": "/$lang/_main/blog"
    }
  }
}
ROUTE_MANIFEST_END */
